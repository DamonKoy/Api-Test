*** Settings ***
Library           DatabaseLibrary
Library           RequestsLibrary
Library           HttpLibrary.HTTP
Library           String
Library           Collections
Library           OperatingSystem
Library           DateTime
Library           NewLibrary
Resource          ../Hosts/host.txt
Resource          ../Common/constant.txt
Resource          ../Common/sql.txt

*** Variables ***
# 获取token模块
${install_token_api}    ?m=Api&c=User&a=token     # 测试服获取install_token
${install_api}    ?m=Api&c=App&a=install    # 通过设备获取token
# AdmUserIdentity模块
${get_identity_info_api}    index.php?m=Api&c=AdmUserIdentity&a=get_identity_info    # 新增用户身份
${get_all_identity_admin_name_api}     index.php?m=Api&c=AdmUserIdentity&a=get_all_identity_admin_name     # 获取所有身份认证名称
# 对外登录接口
${login_api}    ?m=Api&c=User&a=login    # 集成-登录获取验证信息
#验证码相关接口
${mobile_verifycode_api}    /code-for-qa/v1/mobile    # 获取手机验证码
${email_verifycode_api}    /code-for-qa/v1/email    # 获取邮箱验证码
${account_sendverifycode_api}    /api/v1/human/account/verifycode/send    # 发送验证码_发送post请求
# 注册相关接口
${register_add_api}    /api/v1/human/userInfo/register    # 用户注册_发送post请求
${apply_add_api}    /api/v1/human/apply/add    # 申请加入租户_发送post请求
${apply_list_api}    /apply/v1/list    # 租户查询用户申请列表_发送post请求
${apply_confirm_api}    /apply/v1/confirm    # 申请拒绝_发送post请求
${apply_update_api}    /apply/v1/update    # 编辑用户_发送post请求
${member_delete_api}    /member/v1/delete    # 删除用户和租户绑定关系
${apply_info_api}    /apply/v1/info    # 查询申请用户详细信息
${human_unbind_api}    /api/v1/human/apply/unbind    # 用户解除租户绑定
${tenant_switch_api}    /api/v1/human/account/tenant/switch    # 切换租户
${identify_exists_api}    /api/v1/human/account/identify/exists    # 判断身份信息是否存在
${create_api}     /member/v1/create	# 创建用户
${tenant_create_api}     /tenant/v1/create	# 创建租户

*** Keywords ***
测试服获取install_token
    [Arguments]    ${user_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json
    ${response}    GET Request    new_request    ${install_token_api}    params=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    ${data}    Create Dictionary    install_token=${response.json()['data']['install_token']}
    Set Suite Variable    ${install_token}    ${response.json()['data']['install_token']}
    [Return]    ${data}

获取install_token
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    device_model=LYA-AL00    device_brand=HUAWEI    device_token=7c169643-0d5b-471d-935e-82fd4cf896de    device_type=0    language=zh-hans    marketing_channel=chuman
    ${headers}    Create Dictionary    Content-Type=application/json
    ${response}    GET Request    new_request    ${install_api}    params=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    ${data}    Create Dictionary    install_token=${response.json()['data']['install_token']}
    Set Suite Variable    ${install_token}    ${response.json()['data']['install_token']}
    [Return]    ${data}

新增用户身份
    [Arguments]    ${user_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=${MAuthorization1}:${install_token}
    ${response}    GET Request    new_request    ${get_identity_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取所有身份认证名称
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=${MAuthorization1}:${install_token}
    ${response}    GET Request    new_request    ${get_all_identity_admin_name_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取当前时间戳
    ${date}    get current Date
    ${date}    convert Date    ${date}    epoch
    [Return]    ${date}

手机号码登录
    [Arguments]    ${user}    ${password}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    user=${user}    password=${password}
    ${headers}    Create Dictionary    Content-Type=application/x-www-form-urlencoded    MAuthorization=${MAuthorization1}:${install_token}
    ${response}    Post Request    new_request    ${login_api}    data=${loginData}    headers=${headers}
    [Return]    ${response}

集成-登录获取验证信息
    [Arguments]    ${user}    ${password}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    user=${user}    password=${password}
    ${headers}    Create Dictionary    Content-Type=application/x-www-form-urlencoded    MAuthorization=${MAuthorization}
    ${response}    Post Request    new_request    ${login_api}    data=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    Set Global Variable    ${token}    ${response.json()['data']['install_token']}
    ${data}    Create Dictionary    user_id=${response.json()['data']['profile']['user_id']}    nickname=${response.json()['data']['profile']['nickname']}
    [Return]    ${data}


根据类型查询已存在的身份信息
    [Arguments]    ${type}
    连接mysql数据库-humanac
    ${identity_data}=    query    select identity from hc_identify where type = ${type} LIMIT 1;
    [Return]    ${identity_data[0][0]}

生成随机字符串
    [Arguments]    ${num}
    ${result}    Evaluate    "".join(random.sample(string.letters+string.lowercase,int(${num})))    random,string
    [Return]    ${result}

生成随机8位数字
    ${result}    Evaluate    random.randint(00000001,99999999)    random
    [Return]    ${result}

生成随机11位数字
    ${result}    Evaluate    random.randint(10000000001,12999999999)    random
    [Return]    ${result}

生成随机12位数字
    ${result}    Evaluate    random.randint(100000000001,129999999999)    random
    [Return]    ${result}

连接mysql数据库-human
    Connect To Database Using Custom Params    pymysql    database='${human_db_database}', user='${human_db_user}', password='${human_db_password}', host='${human_db_ip}', port=${human_db_port},charset="UTF8"

连接mysql数据库-humanac
    Connect To Database Using Custom Params    pymysql    database='${humanac_db_database}', user='${humanac_db_user}', password='${humanac_db_password}', host='${humanac_db_ip}', port=${humanac_db_port},charset="UTF8"

连接mysql数据库-humanauz
    Connect To Database Using Custom Params    pymysql    database='${humanauz_db_database}', user='${humanauz_db_user}', password='${humanauz_db_password}', host='${humanauz_db_ip}', port=${humanauz_db_port},charset="UTF8"

连接mysql数据库-humanres
    Connect To Database Using Custom Params    pymysql    database='${humanres_db_database}', user='${humanres_db_user}', password='${humanres_db_password}', host='${humanres_db_ip}', port=${humanres_db_port},charset="UTF8"

连接mysql数据库-humantag
    Connect To Database Using Custom Params    pymysql    database='${humantag_db_database}', user='${humantag_db_user}', password='${humantag_db_password}', host='${humantag_db_ip}', port=${humantag_db_port},charset="UTF8"

断开mysql数据库
    Disconnect From Database

删除初始化数据
    连接mysql数据库-human
    Execute Sql Script    ${CURDIR}/delete_base_data_human.sql
