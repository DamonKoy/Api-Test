*** Settings ***
Library           DatabaseLibrary
Library           RequestsLibrary
Library           HttpLibrary.HTTP
Library           String
Library           Collections
Library           OperatingSystem
Library           DateTime
Library           NewLibrary
Resource          ../Hosts/host.txt
Resource          ../Common/constant.txt
Resource          ../Common/sql.txt

*** Variables ***
# 获取token
${install_token_api}    ?m=Api&c=User&a=token    # 测试服获取install_token
${install_api}    ?m=Api&c=App&a=install    # 通过设备获取token
# AdmUserIdentity
${AdmUserIdentity_get_identity_info_api}    index.php?m=Api&c=AdmUserIdentity&a=get_identity_info    # 新增用户身份
${AdmUserIdentity_get_all_identity_admin_name_api}    index.php?m=Api&c=AdmUserIdentity&a=get_all_identity_admin_name    # 获取所有身份认证名称
# SpdiySearch
${SpdiySearch_get_automated_keyword_api}    ?m=Api&c=SpdiySearch&a=get_automated_keyword    # 获取搜索联想词
# NewyearActivity
${NewyearActivity_get_newyear_activity_list_api}    ?m=Api&c=NewyearActivity&a=get_newyear_activity_list    # 获取寒假福利活动列表
${NewyearActivity_get_recharge_active_reward_api}    ?m=Api&c=NewyearActivity&a=get_recharge_active_reward    # 获取充值满赠
# ChumanDrama
${ChumanDrama_muti_edit_role_api}    ?m=Api&c=ChumanDrama&a=muti_edit_role    # 新建（修改）漫剧角色
${ChumanDrama_muti_copy_role_api}    ?m=Api&c=ChumanDrama&a=muti_copy_role    # 复制漫剧角色(导入角色时使用)
${ChumanDrama_get_last_role_list_api}    ?m=Api&c=ChumanDrama&a=get_last_role_list    # 4.8.7-获取上一篇角色列表
# Comic
${comic_edit_api}    ?m=Api&c=Comic&a=comic_edit    # 创建/编辑漫画单篇
${comic_create_comic_list_api}    ?m=Api&c=Comic&a=comic_create_comic_list    # 4.5.2-获取漫画单篇列表
${comic_del_api}    ?m=Api&c=Comic&a=comic_del    # 删除漫画单篇
${Comic_group_add_api}    ?m=Api&c=Comic&a=group_add    # 创建漫画连载
${Comic_group_edit_api}    ?m=Api&c=Comic&a=group_edit    # 编辑漫画连载
${comic_create_group_list_api}    ?m=Api&c=Comic&a=comic_create_group_list    # 获取漫画连载列表
${Comic_group_del_api}    ?m=Api&c=Comic&a=group_del    # 删除漫画连载
# WebUserRes
${WebUserRes_get_idcard_info_api}    m=Api&c=WebUserRes&a=get_idcard_info    # 4.8.7-获取身份详情
${WebUserRes_get_idcard_binding_status_api}    ?m=Api&c=WebUserRes&a=get_idcard_binding_status    # 4.8.7-获取绑定信息
${WebUserRes_binding_card_info_api}    ?m=Api&c=WebUserRes&a=binding_card_info    # 4.8.7-绑定身份证信息
${WebUserRes_edit_card_info_api}    ?m=Api&c=WebUserRes&a=edit_card_info    # 4.8.7-修改身份证信息
# ChumanShop
${ChumanShop_edit_card_info_api}    ?m=Api&c=ChumanShop&a=edit_card_info    # 4.8.7-触漫修改身份证信息
${ChumanShop_binding_card_info_api}    ?m=Api&c=ChumanShop&a=binding_card_info    # 4.8.7-触漫绑定身份证信息
${ChumanShop_get_verification_code_new_api}    ?m=Api&c=ChumanShop&a=get_verification_code_new    # 4.8.7-触漫修改、添加身份认证验证码
${ChumanShop_get_calculate_withdrawals_info_api}    ?m=Api&c=ChumanShop&a=get_calculate_withdrawals_info    # 4.8.7-触漫获取提现税前/后及扣税信息
${ChumanShop_get_shop_idcard_binding_info_api}    ?m=Api&c=ChumanShop&a=get_shop_idcard_binding_info    # 4.8.7-触漫获取绑定信息
${ChumanShop_chuman_shop_noti_api}    ?m=Api&c=ChumanShop&a=chuman_shop_noti    # 店铺消息
# UserExtend
${UserExtend_my_grade}    ?m=Api&c=UserExtend&a=my_grade    # 4.8.7-获取我的等级
# UserRes
${UserRes_get_charge_scales_api}    ?m=Api&c=UserRes&a=get_charge_scales    # 4.8.7-充值比例列表
${UserRes_get_coins_info_api}    ?m=Api&c=UserRes&a=get_coins_info    # 4.8.7-兑换金币界面信息
${UserRes_get_my_gems_api}    ?m=Api&c=UserRes&a=get_my_gems    # 4.8.7-我的钻石
# AdventureGame
${AdventureGame_get_my_game_group_list_api}    ?m=Api&c=AdventureGame&a=get_my_game_group_list    # 获取漫剧连载列表
${AdventureGame_edit_game_group_api}    ?m=Api&c=AdventureGame&a=edit_game_group    # 创建漫剧连载
${AdventureGame_delele_game_group_api}    ?m=Api&c=AdventureGame&a=delele_game_group    # 删除漫剧连载
# Share
${Share_get_tag_list_api}    ?m=Api&c=Share&a=get_tag_list    # 获取连载标签列表
# ChumanDramaGroup
${ChumanDramaGroup_edit_drama_group_api}    ?m=Api&c=ChumanDramaGroup&a=edit_drama_group    # 创建对话剧连载
${ChumanDramaGroup_del_drama_group_api}    ?m=Api&c=ChumanDramaGroup&a=del_drama_group    # 删除对话剧连载
${ChumanDramaGroup_get_manage_drama_group_list_api}    ?m=Api&c=ChumanDramaGroup&a=get_manage_drama_group_list    # 获取对话剧连载
# HomePage
${HomePage_homepage_new_list_api}    ?m=Api&c=HomePage&a=homepage_new_list    # 获取首页信息列表
${HomePage_get_home_banner_list_api}    ?m=Api&c=HomePage&a=get_home_banner_list    # 获取首页banner列表
${HomePage_check_follow_unread_api}    ?m=Api&c=HomePage&a=check_follow_unread    # 0.1.0-好友tab小红点
${HomePage_get_new_special_info_api}    ?m=Api&c=HomePage&a=get_new_special_info    # 4.6.9-获取专题信息
${HomePage_get_new_tags_list_api}    ?m=Api&c=HomePage&a=get_new_tags_list    # 4.6.9-获取标签列表
${HomePage_get_channel_recommend_list_api}    ?m=Api&c=HomePage&a=get_channel_recommend_list    # 4.6.9-换一换首页推荐频道列表
${HomePage_get_follow_obj_list_api}    ?m=Api&c=HomePage&a=get_follow_obj_list    # 0.1.0-关注内容列表
${HomePage_get_follow_user_info_api}    ?m=Api&c=HomePage&a=get_follow_user_info    # 0.1.0-关注用户详情
${HomePage_get_home_content_list_api}    ?m=Api&c=HomePage&a=get_home_content_list    # 4.8.4-首页内容列表
${HomePage_get_home_page_alert_api}    ?m=Api&c=HomePage&a=get_home_page_alert    # 4.8.6-首页弹窗
${HomePage_get_home_page_feed_flow_api}    ?m=Api&c=HomePage&a=get_home_page_feed_flow    # 4.8.3-首页feed流
${HomePage_get_rec_subscribe_obj_list_api}    ?m=Api&c=HomePage&a=get_rec_subscribe_obj_list    # 4.2.1-推荐订阅对象列表
${HomePage_get_recommend_group_list_api}    ?m=Api&c=HomePage&a=get_recommend_group_list    # 4.6.9--换一换作品列表
${HomePage_get_recommend_like_content_list_api}    ?m=Api&c=HomePage&a=get_recommend_like_content_list    # 4.8.3-猜你喜欢
${HomePage_get_recommend_obj_list_api}    ?m=Api&c=HomePage&a=get_recommend_obj_list    # 0.1.0-推荐内容列表
${HomePage_get_reduce_recommend_work_reason_api}    ?m=Api&c=HomePage&a=get_reduce_recommend_work_reason    # 4.6.9-屏蔽推荐作品原因列表
${HomePage_get_subscribed_content_list_api}    ?m=Api&c=HomePage&a=get_subscribed_content_list    # 4.8.2-猜你喜欢内容
${HomePage_get_subscribed_obj_action_list_api}    ?m=Api&c=HomePage&a=get_subscribed_obj_action_list    # 4.8.4-获取订阅对象动态列表
${HomePage_homepage_new_list_api}    ?m=Api&c=HomePage&a=homepage_new_list    # 4.8.3--首页推荐列表
${HomePage_reduce_recommend_work_api}    ?m=Api&c=HomePage&a=reduce_recommend_work    # 4.6.9-屏蔽推荐作品
${HomePage_square_scenarized_api}    ?m=Api&c=HomePage&a=square_scenarized    # 4.3.1-广场场景化
${HomePage_set_dislike_api}    ?m=Api&c=HomePage&a=set_dislike    # 4.8.3-feed流不喜欢
# Spdiy
${Spdiy_get_asset_info_api}    ?m=Api&c=Spdiy&a=get_asset_info    # 获取用户服装店余额信息
${Spdiy_get_first_class_name_api}    ?m=Api&c=Spdiy&a=get_first_class_name    # 获取服装店获取第一类目
${Spdiy_get_resource_list_api}    ?m=Api&c=Spdiy&a=get_resource_list    # 获取服装店列表
${Spdiy_get_set_info_shop_api}    ?m=Api&c=Spdiy&a=get_set_info_shop    # 获取服装详情信息
${Spdiy_package_info_api}    ?m=Api&c=Spdiy&a=package_info    # 获取素材包详情
# Notification
${notification_page_api}    ?m=Api&c=Notification&a=notification_page    # 好友-消息通知列表
${notification_category_page_api}    ?m=Api&c=Notification&a=notification_category_page    # 关注/触漫娘消息
${notification_category_page_new_api}    ?m=Api&c=Notification&a=notification_category_page_new    # 分类消息
# Cooperation
${Cooperation_check_user_is_cooperate_api}    ?m=Api&c=Cooperation&a=check_user_is_cooperate    # 4.1.8-检查合作弹窗提示
${Cooperation_get_cooperation_message_list_api}    ?m=Api&c=Cooperation&a=get_cooperation_message_list    # 4.8.4-获取作品合作消息列表
${Cooperation_get_cooperater_unread_api}    ?m=Api&c=Cooperation&a=get_cooperater_unread    # 4.1.8找朋友未读消息数
# Club
${Club_get_user_join_list_api}    ?m=Api&c=Club&a=get_user_join_list    # 4.1.8-社团招募个人消息
${Club_club_message_honor_list_api}    ?m=Api&c=Club&a=club_message_honor_list    # 社团消息
${Club_getClubNoticeUnreadNum_api}    ?m=Api&c=Club&a=getClubNoticeUnreadNum    # 社团未读数量信息
${Club_club_notice_list_api}    ?m=Api&c=club&a=club_notice_list    # 漫画社消息
${Club_get_region_message_list_api}    ?m=Api&c=Club&a=get_region_message_list    # 漫区消息
${Club_get_club_join_list_api}    ?m=Api&c=Club&a=get_club_join_list    # 招募处理
# Channel
${Channel_get_user_apply_list_api}    ?m=Api&c=Channel&a=get_user_apply_list    # 4.1.8-申请加入频道消息列表
# Work
${Work_get_club_join_list_api}    ?m=Api&c=Work&a=get_work_message_list    # 4.8.4-获取企划消息列表
# Chat
${Chat_get_common_chat_unread_num_api}    ?m=Api&c=Chat&a=get_common_chat_unread_num    # 4.6.8-获取好友列表未读数
# MeituShop
${MeituShop_get_my_meitu_list_api}    ?m=Api&c=MeituShop&a=get_my_meitu_list    # 4.2.0-获取我的美图列表
# Island
${Island_like_island_api}    ?m=Api&c=Island&a=like_island    # 鼓励梦映岛内容



*** Keywords ***
测试服获取install_token
    [Arguments]    ${user_id}
    # 获取token
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${install_token_api}    params=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    Should Be Equal As Strings    ${response.json()['status']}    ok
    Should Be Equal As Strings    ${response.json()['message']['message']}    操作成功
    ${data}    Create Dictionary    install_token=${response.json()['data']['install_token']}
    Set Suite Variable    ${install_token}    ${response.json()['data']['install_token']}
    [Return]    ${data}

获取install_token
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    device_model=LYA-AL00    device_brand=HUAWEI    device_token=7c169643-0d5b-471d-935e-82fd4cf896de    device_type=0    language=zh-hans
    ...    marketing_channel=chuman
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${install_api}    data=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    Should Be Equal As Strings    ${response.json()['status']}    ok
    Should Be Equal As Strings    ${response.json()['message']['message']}    操作成功
    ${data}    Create Dictionary    install_token=${response.json()['data']['install_token']}
    Set Suite Variable    ${install_token}    ${response.json()['data']['install_token']}
    # AdmUserIdentity
    [Return]    ${data}


# AdmUserIdentity
新增用户身份
    [Arguments]    ${user_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${AdmUserIdentity_get_identity_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取所有身份认证名称
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${AdmUserIdentity_get_all_identity_admin_name_api}    params=${loginData}    headers=${headers}
    # SpdiySearch
    [Return]    ${response}


# SpdiySearch
获取搜索联想词
    [Arguments]    ${keyword}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    keyword=${keyword}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${SpdiySearch_get_automated_keyword_api}    params=${loginData}    headers=${headers}
    # NewyearActivity
    [Return]    ${response}


# NewyearActivity
获取寒假福利活动列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${NewyearActivity_get_newyear_activity_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取充值满赠
    [Arguments]    ${reward_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    reward_id=${reward_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${NewyearActivity_get_recharge_active_reward_api}    data=${loginData}    headers=${headers}
    # ChumanDrama
    [Return]    ${response}


# ChumanDrama
新建（修改）漫剧角色
    [Arguments]    ${role_id}    ${drama_id}    ${avatar}    ${name}    ${sex}    ${image}
    ...    ${desc}    ${is_copy}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    role_id=${role_id}    drama_id=${drama_id}    avatar=${avatar}    name=${name}    sex=${sex}
    ...    image=${image}    desc=${desc}    is_copy=${is_copy}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${ChumanDrama_muti_edit_role_api}    data=${loginData}    headers=${headers}
    [Return]    ${response}

复制漫剧角色(导入角色时使用)
    [Arguments]    ${role_id}    ${drama_id}    ${avatar}    ${name}    ${sex}    ${image}
    ...    ${desc}    ${is_copy}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    role_id=${role_id}    drama_id=${drama_id}    avatar=${avatar}    name=${name}    sex=${sex}
    ...    image=${image}    desc=${desc}    is_copy=${is_copy}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${ChumanDrama_muti_copy_role_api}    data=${loginData}    headers=${headers}
    [Return]    ${response}

获取上一篇角色列表
    [Arguments]    ${group_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    group_id=${group_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    get Request    new_request    ${ChumanDrama_get_last_role_list_api}    params=${loginData}    headers=${headers}
    # Comic
    [Return]    ${response}


# Comic
创建/编辑漫画单篇
    [Arguments]    ${id}    ${title}    ${data_json}    ${font_face}    ${title_image}    ${version}
    ...    ${state}    ${block_count}    ${intro}    ${comic_type}    ${group_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${id}    title=${title}    data_json=${data_json}    font_face=${font_face}    title_image=${title_image}
    ...    version=${version}    state=${state}    block_count=${block_count}    intro=${intro}    comic_type=${comic_type}    group_id=${group_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${comic_edit_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取漫画单篇列表
    [Arguments]    ${pize}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    pize=${pize}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${comic_create_comic_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

删除漫画单篇
    [Arguments]    ${id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${comic_del_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

创建漫画连载
    [Arguments]    ${name}    ${title_image}    ${summary}    ${tags}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    name=${name}    title_image=${title_image}    summary=${summary}    tags=${tags}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${Comic_group_add_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

编辑漫画连载
    [Arguments]    ${id}    ${name}    ${title_image}    ${summary}    ${tags}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${id}    name=${name}    title_image=${title_image}    summary=${summary}    tags=${tags}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${Comic_group_edit_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取漫画连载列表
    [Arguments]    ${pize}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    pize=${pize}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${comic_create_group_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

删除漫画连载
    [Arguments]    ${id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${Comic_group_del_api}    params=${loginData}    headers=${headers}
    # WebUserRes
    [Return]    ${response}


# WebUserRes
获取身份详情
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${WebUserRes_get_idcard_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取绑定信息
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    GET Request    new_request    ${WebUserRes_get_idcard_binding_status_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

绑定身份证信息
    [Arguments]    ${type}    ${name}    ${card_num}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    type=${type}    name=${name}    card_num=${card_num}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${WebUserRes_binding_card_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

修改身份证信息
    [Arguments]    ${name}    ${number}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    name=${name}    number=${number}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${WebUserRes_edit_card_info_api}    params=${loginData}    headers=${headers}
    # ChumanShop
    [Return]    ${response}

触漫绑定身份证信息
    [Arguments]    ${type}    ${name}    ${card_num}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    type=${type}    name=${name}    card_num=${card_num}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${ChumanShop_binding_card_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

触漫修改身份证信息
    [Arguments]    ${name}    ${card_num}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    name=${name}    card_num=${card_num}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${ChumanShop_edit_card_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

触漫修改、添加身份认证验证码
    [Arguments]    ${phone_number}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    phone_number=${phone_number}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${ChumanShop_get_verification_code_new_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

触漫获取提现税前/后及扣税信息
    [Arguments]    ${gems}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    gems=${gems}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${ChumanShop_get_calculate_withdrawals_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

触漫获取绑定信息
    [Arguments]    ${shop_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    shop_id=${shop_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${ChumanShop_get_shop_idcard_binding_info_api}    params=${loginData}    headers=${headers}
    # UserExtend
    [Return]    ${response}

店铺消息
    [Arguments]    ${type}    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    type=${type}    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${ChumanShop_chuman_shop_noti_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# UserExtend
获取我的等级
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${UserExtend_my_grade}    params=${loginData}    headers=${headers}
    # UserRes
    [Return]    ${response}


# UserRes
充值比例列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${UserRes_get_charge_scales_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

兑换金币界面信息
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${UserRes_get_coins_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

我的钻石
    [Arguments]    ${version}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    version=${version}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${UserRes_get_my_gems_api}    params=${loginData}    headers=${headers}
    # AdventureGame
    [Return]    ${response}


# AdventureGame
获取漫剧连载列表
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${AdventureGame_get_my_game_group_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

创建漫剧连载
    [Arguments]    ${title}    ${title_image}    ${music_url}    ${cover_data_json}    ${cover_motion_json}    ${tags}
    ...    ${desc}    ${style_id}    ${video_title}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    title=${title}    title_image=${title_image}    music_url=${music_url}    cover_data_json=${cover_data_json}    cover_motion_json=${cover_motion_json}
    ...    tags=${tags}    desc=${desc}    style_id=${style_id}    video_title=${video_title}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${AdventureGame_edit_game_group_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

删除漫剧连载
    [Arguments]    ${group_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    group_id=${group_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${AdventureGame_delele_game_group_api}    params=${loginData}    headers=${headers}
    # Share
    [Return]    ${response}


# Share
获取连载标签列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Share_get_tag_list_api}    params=${loginData}    headers=${headers}
    # ChumanDramaGroup
    [Return]    ${response}


# ChumanDramaGroup
创建对话剧连载
    [Arguments]    ${group_id}    ${title_image}    ${title}    ${category}    ${desc}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    group_id=${group_id}    title_image=${title_image}    title=${title}    category=${category}    desc=${desc}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${ChumanDramaGroup_edit_drama_group_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

删除对话剧连载
    [Arguments]    ${group_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    group_id=${group_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${ChumanDramaGroup_del_drama_group_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取对话剧连载
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${ChumanDramaGroup_get_manage_drama_group_list_api}    params=${loginData}    headers=${headers}
    # HomePage
    [Return]    ${response}


# HomePage
获取首页信息列表
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_homepage_new_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取首页banner列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_home_banner_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

好友tab小红点
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${HomePage_check_follow_unread_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取专题信息
    [Arguments]    ${special_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    special_id=${special_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_new_special_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取标签列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_new_tags_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

换一换首页推荐频道列表
    [Arguments]    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_channel_recommend_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

关注内容列表
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_follow_obj_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

关注用户详情
    [Arguments]    ${user_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    user_id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_follow_user_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

首页内容列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_home_content_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

首页弹窗
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_home_page_alert_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

首页feed流
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_home_page_feed_flow_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

推荐订阅对象列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_rec_subscribe_obj_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

换一换作品列表
    [Arguments]    ${type}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    type=${type}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_recommend_group_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

猜你喜欢
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_recommend_like_content_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

推荐内容列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_recommend_obj_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

屏蔽推荐作品原因列表
    [Arguments]    ${box_id}    ${box_type}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    box_id=${box_id}    box_type=${box_type}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_reduce_recommend_work_reason_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

猜你喜欢内容
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_subscribed_content_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取订阅对象动态列表
    [Arguments]    ${page}    ${pagesize}    ${time}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}    time=${time}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_get_subscribed_obj_action_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

首页推荐列表
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_homepage_new_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

屏蔽推荐作品
    [Arguments]    ${box_id}    ${box_type}    ${reason_tag}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    box_id=${box_id}    box_type=${box_type}    reason_tag=${reason_tag}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${HomePage_reduce_recommend_work_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

广场场景化
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${HomePage_square_scenarized_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

feed流不喜欢
    [Arguments]    ${proc_type}    ${obj_type}    ${obj_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    proc_type=${proc_type}    obj_type=${obj_type}    obj_id=${obj_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${HomePage_set_dislike_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# Notification
好友-消息通知列表
    [Arguments]    ${version}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    version=${version}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${notification_page_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

分类消息
    [Arguments]    ${version}   ${type}    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    version=${version}    type=${type}    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${notification_category_page_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

新分类消息
    [Arguments]    ${last_id}    ${type}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    last_id=${last_id}    type=${type}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${notification_category_page_new_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

# Cooperation
检查合作弹窗提示
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Cooperation_check_user_is_cooperate_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取作品合作消息列表
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary        page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Cooperation_get_cooperation_message_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

找朋友未读消息数
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Cooperation_get_cooperater_unread_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# Club
社团招募个人消息
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Club_get_user_join_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

社团消息
    [Arguments]    ${page}    ${version}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    version=${version}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Club_club_message_honor_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

社团未读数量信息
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Club_getClubNoticeUnreadNum_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

漫画社消息
    [Arguments]    ${page}    ${type}    ${version}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    type=${type}    version=${version}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Club_club_notice_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

漫区消息
    [Arguments]    ${club_id}    ${last_id}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    club_id=${club_id}    last_id=${last_id}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Club_get_region_message_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

招募处理
    [Arguments]    ${page}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Club_get_club_join_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# Channel
申请加入频道消息列表
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Channel_get_user_apply_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# Work
获取企划消息列表
    [Arguments]    ${last_id}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    last_id=${last_id}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Work_get_club_join_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# Chat
获取好友列表未读数
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Chat_get_common_chat_unread_num_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# MeituShop
获取我的美图列表
    [Arguments]    ${page}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    page=${page}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${MeituShop_get_my_meitu_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}


# Island
鼓励梦映岛内容
    [Arguments]    ${island_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    island_id=${island_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Get Request    new_request    ${Island_like_island_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}






# 方法
获取当前时间戳
    ${date}    get current Date
    ${date}    convert Date    ${date}    epoch
    [Return]    ${date}

转换成时间戳
    [Arguments]    ${time}
    ${time}    convert Date    ${time}    epoch
    [Return]    ${time}

手机号码登录
    [Arguments]    ${user}    ${password}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    user=${user}    password=${password}
    ${headers}    Create Dictionary    Content-Type=application/x-www-form-urlencoded    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${login_api}    data=${loginData}    headers=${headers}
    [Return]    ${response}

集成-登录获取验证信息
    [Arguments]    ${user}    ${password}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    user=${user}    password=${password}
    ${headers}    Create Dictionary    Content-Type=application/x-www-form-urlencoded    MAuthorization=&{MAuthorization1}[通用]:${install_token}    versioncode=${versioncode}
    ${response}    Post Request    new_request    ${login_api}    data=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    Set Global Variable    ${token}    ${response.json()['data']['install_token']}
    ${data}    Create Dictionary    user_id=${response.json()['data']['profile']['user_id']}    nickname=${response.json()['data']['profile']['nickname']}
    [Return]    ${data}

内嵌tags_trr的FOR判断
    [Arguments]    @{tagList}
    : FOR    ${tag}    IN    @{tagList}
    \    Log    ${tag}
    \    ${id}    Get From Dictionary    ${tag}    id
    \    ${tag_id}    Get From Dictionary    ${tag}    tag_id
    \    ${tag_name}    Get From Dictionary    ${tag}    tag_name
    \    ${tag_img}    Get From Dictionary    ${tag}    tag_img
    \    ${flag}    Run Keyword If    '${id}'!='' and '${tag_id}'!='' and '${tag_name}'!='' and '${tag_img}'!=''    set Variable    true
    \    Run Keyword If    '${flag}'=='${None}'    Exit for loop
    Should Be Equal As Strings    ${flag}    true

# 分类消息判断
判断消息sp_type=1的返回格式
    [Arguments]    ${data}
    ${id}    Get From Dictionary    ${data}    id
    ${news_id}    Get From Dictionary    ${data}    news_id
    ${title}   Get From Dictionary    ${data}    title
    ${content}    Get From Dictionary    ${data}    content
    ${created}    Get From Dictionary    ${data}    created
    ${r_type}    Get From Dictionary    ${data}    type
    ${status}    Get From Dictionary    ${data}    status
    ${version}    Get From Dictionary    ${data}    version
    ${r_data}    Get From Dictionary    ${data}    data
    ${flag}    Run Keyword If    '${id}'!='' and '${news_id}'!='' and '${title}'!='' and '${content}'!='' and '${created}'!='' and '${r_type}'=='${type}' and '${version}'!='' and '${r_data}'=='0'    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

判断消息sp_type=6的返回格式
    [Arguments]    ${data}
    ${id}    Get From Dictionary    ${data}    id
    ${user_id}    Get From Dictionary    ${data}    user_id
    ${sender_id}    Get From Dictionary    ${data}    sender_id
    ${title}   Get From Dictionary    ${data}    title
    ${content}    Get From Dictionary    ${data}    content
    ${created}    Get From Dictionary    ${data}    created
    ${r_type}    Get From Dictionary    ${data}    type
    ${status}    Get From Dictionary    ${data}    status
    ${r_data}    Get From Dictionary    ${data}    data
    ${flag}    Run Keyword If    '${id}'!='' and '${user_id}'!='' and '${sender_id}'!='' and '${title}'!='' and '${content}'!='' and '${created}'!='' and '${r_type}'=='${type}' and '${r_data}'!=''    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

判断消息sp_type=46的返回格式
    [Arguments]    ${data}
    ${id}    Get From Dictionary    ${data}    id
    ${news_id}    Get From Dictionary    ${data}    news_id
    ${title}   Get From Dictionary    ${data}    title
    ${content}    Get From Dictionary    ${data}    content
    ${created}    Get From Dictionary    ${data}    created
    ${r_type}    Get From Dictionary    ${data}    type
    ${status}    Get From Dictionary    ${data}    status
    ${version}    Get From Dictionary    ${data}    version
    ${r_data}    Get From Dictionary    ${data}    data
    ${flag}    Run Keyword If    '${id}'!='' and '${news_id}'!='' and '${title}'!='' and '${content}'!='' and '${created}'!='' and '${r_type}'=='${type}' and '${version}'!='' and '${r_data}'!='' and '${r_data}'!='0'    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

判断消息sp_type=47的返回格式
    [Arguments]    ${data}
    ${id}    Get From Dictionary    ${data}    id
    ${news_id}    Get From Dictionary    ${data}    news_id
    ${title}   Get From Dictionary    ${data}    title
    ${content}    Get From Dictionary    ${data}    content
    ${created}    Get From Dictionary    ${data}    created
    ${r_type}    Get From Dictionary    ${data}    type
    ${status}    Get From Dictionary    ${data}    status
    ${version}    Get From Dictionary    ${data}    version
    ${flag}    Run Keyword If    '${id}'!='' and '${news_id}'!='' and '${title}'!='' and '${content}'!='' and '${created}'!='' and '${r_type}'=='${type}' and '${version}'!=''    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

# 新分类消息判断
判断消息log_type=1的返回格式
    [Arguments]    ${data}
    Should Contain    ${data}    avatar
    Should Contain    ${data}    nickname
    Should Contain    ${data}    content
    ${id}    Get From Dictionary    ${data}    id
    ${user_id}    Get From Dictionary    ${data}    user_id
    ${sender_id}    Get From Dictionary    ${data}    sender_id
    ${title}   Get From Dictionary    ${data}    title
    ${jump_type}    Get From Dictionary    ${data}    jump_type
    ${jump_id}    Get From Dictionary    ${data}    jump_id
    ${r_status}    Get From Dictionary    ${data}    status
    ${created}    Get From Dictionary    ${data}    created
    ${flag}    Run Keyword If    '${id}'!='' and '${user_id}'!='' and '${sender_id}'!='' and '${title}'!='' and '${jump_type}'!='' and '${jump_id}'!='' and '${r_status}'!='' and '${created}'!=''    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

判断消息log_type=2的返回格式
    [Arguments]    ${data}
    Should Contain    ${data}    avatar
    Should Contain    ${data}    relation_id
    Should Contain    ${data}    content
    ${id}    Get From Dictionary    ${data}    id
    ${user_id}    Get From Dictionary    ${data}    user_id
    ${sender_id}    Get From Dictionary    ${data}    sender_id
    ${title}   Get From Dictionary    ${data}    title
    ${jump_type}    Get From Dictionary    ${data}    jump_type
    ${jump_id}    Get From Dictionary    ${data}    jump_id
    ${nickname}   Get From Dictionary    ${data}    nickname
    ${r_status}    Get From Dictionary    ${data}    status
    ${created}    Get From Dictionary    ${data}    created
    ${flag}    Run Keyword If    '${id}'!='' and '${user_id}'!='' and '${sender_id}'!='' and '${title}'!='' and '${jump_type}'!='' and '${jump_id}'!='' and '${nickname}'!='' and '${r_status}'!='' and '${created}'!=''    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

判断消息log_type=3的返回格式
    [Arguments]    ${data}
    Should Contain    ${data}    reply_to
    Should Contain    ${data}    avatar
    Should Contain    ${data}    relation_id
    Should Contain    ${data}    content
    ${id}    Get From Dictionary    ${data}    id
    ${user_id}    Get From Dictionary    ${data}    user_id
    ${sender_id}    Get From Dictionary    ${data}    sender_id
    ${title}   Get From Dictionary    ${data}    title
    ${jump_type}    Get From Dictionary    ${data}    jump_type
    ${jump_id}    Get From Dictionary    ${data}    jump_id
    ${nickname}   Get From Dictionary    ${data}    nickname
    ${r_status}    Get From Dictionary    ${data}    status
    ${created}    Get From Dictionary    ${data}    created
    ${flag}    Run Keyword If    '${id}'!='' and '${user_id}'!='' and '${sender_id}'!='' and '${title}'!='' and '${jump_type}'!='' and '${jump_id}'!='' and '${nickname}'!='' and '${r_status}'!='' and '${created}'!=''    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

判断消息log_type=4的返回格式
    [Arguments]    ${data}
    Should Contain    ${data}    avatar
    Should Contain    ${data}    content
    Should Contain    ${data}    jump_url
    Should Contain    ${data}    title
    ${id}    Get From Dictionary    ${data}    id
    ${user_id}    Get From Dictionary    ${data}    user_id
    ${sender_id}    Get From Dictionary    ${data}    sender_id
    ${jump_type}    Get From Dictionary    ${data}    jump_type
    ${jump_id}    Get From Dictionary    ${data}    jump_id
    ${nickname}   Get From Dictionary    ${data}    nickname
    ${r_status}    Get From Dictionary    ${data}    status
    ${created}    Get From Dictionary    ${data}    created
    ${flag}    Run Keyword If    '${id}'!='' and '${user_id}'!='' and '${sender_id}'!='' and '${jump_type}'!='' and '${jump_id}'!='' and '${nickname}'!='' and '${r_status}'!='' and '${created}'!=''    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop

判断作品消息log_type=2的返回格式
    [Arguments]    ${data}
    Should Contain    ${data}    avatar
    Should Contain    ${data}    content
    ${id}    Get From Dictionary    ${data}    id
    ${user_id}    Get From Dictionary    ${data}    user_id
    ${sender_id}    Get From Dictionary    ${data}    sender_id
    ${title}   Get From Dictionary    ${data}    title
    ${jump_type}    Get From Dictionary    ${data}    jump_type
    ${jump_id}    Get From Dictionary    ${data}    jump_id
    ${nickname}   Get From Dictionary    ${data}    nickname
    ${r_status}    Get From Dictionary    ${data}    status
    ${created}    Get From Dictionary    ${data}    created
    ${flag}    Run Keyword If    '${id}'!='' and '${user_id}'!='' and '${sender_id}'!='' and '${title}'!='' and '${jump_type}'!='' and '${jump_id}'!='' and '${nickname}'!='' and '${r_status}'!='' and '${created}'!=''    Set Variable    true
    Run Keyword If    '${flag}'=='${None}'    Exit for loop


判断社团招募个人信息type=1的返回格式
    [Arguments]    ${response}    ${i}
    Should Be True    ${response.json()['data']['list'][${i}]['join_id']} > 0
    Should Contain    ${response.json()['data']['list'][${i}]}    create_time
    Should Contain    ${response.json()['data']['list'][${i}]}    content
    Should Be True    ${response.json()['data']['list'][${i}]['club']['club_id']} > 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['level']} > 0
    Should Contain    ${response.json()['data']['list'][${i}]['club']}    name
    Should Contain    ${response.json()['data']['list'][${i}]['club']}    logo_url
    Should Contain    ${response.json()['data']['list'][${i}]['club']}    descp
    Should Be True    ${response.json()['data']['list'][${i}]['club']['member_num']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['allow_member_num']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['status']['status_id']} >= 0
    Should Contain    ${response.json()['data']['list'][${i}]['club']['status']}    name
    Should Be True    ${response.json()['data']['list'][${i}]['club']['allow_apply']}>= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['no_audit']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['day_num']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['status']['join_status_id']} >= 0
    Should Contain    ${response.json()['data']['list'][${i}]['status']}    name

判断社团招募个人信息type=2的返回格式
    [Arguments]    ${response}    ${i}
    Should Be True    ${response.json()['data']['list'][${i}]['join_id']} > 0
    Should Contain    ${response.json()['data']['list'][${i}]}    create_time
    Should Contain    ${response.json()['data']['list'][${i}]}    content
    Should Be True    ${response.json()['data']['list'][${i}]['club']['club_id']} > 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['level']} > 0
    Should Contain    ${response.json()['data']['list'][${i}]['club']}    name
    Should Contain    ${response.json()['data']['list'][${i}]['club']}    logo_url
    Should Contain    ${response.json()['data']['list'][${i}]['club']}    descp
    Should Be True    ${response.json()['data']['list'][${i}]['club']['member_num']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['allow_member_num']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['status']['status_id']} >= 0
    Should Contain    ${response.json()['data']['list'][${i}]['club']['status']}    name
    Should Be True    ${response.json()['data']['list'][${i}]['club']['allow_apply']}>= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['no_audit']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['club']['day_num']} >= 0
    Should Be True    ${response.json()['data']['list'][${i}]['status']['join_status_id']} >= 0
    Should Contain    ${response.json()['data']['list'][${i}]['status']}    name
    Should Be True    ${response.json()['data']['list'][${i}]['deal_by']['user_id']} >= 0
    Should Contain    ${response.json()['data']['list'][${i}]['deal_by']}    nickname


校验接口返回状态正常
    [Arguments]    ${response}    # 接口返回数据
    log    ${response.content}
    Should Be Equal As Strings    ${response.status_code}    200
    log    ${response.json()['message']['message']}
    Should Be Equal As Strings    ${response.json()['status']}    ok
    Should Be Equal As Strings    ${response.json()['message']['message']}    操作成功

根据类型查询已存在的身份信息
    [Arguments]    ${type}
    连接mysql数据库-humanac
    ${identity_data}=    query    select identity from hc_identify where type = ${type} LIMIT 1;
    [Return]    ${identity_data[0][0]}

生成随机字符串
    [Arguments]    ${num}
    ${result}    Evaluate    "".join(random.sample(string.letters+string.lowercase,int(${num})))    random,string
    [Return]    ${result}

生成随机6位数字
    ${result}    Evaluate    random.randint(00000001,99999)    random
    [Return]    ${result}

生成随机8位数字
    ${result}    Evaluate    random.randint(00000001,99999999)    random
    [Return]    ${result}

生成随机11位数字
    ${result}    Evaluate    random.randint(10000000001,12999999999)    random
    [Return]    ${result}

生成随机12位数字
    ${result}    Evaluate    random.randint(100000000001,129999999999)    random
    [Return]    ${result}

连接mysql数据库-human
    Connect To Database Using Custom Params    pymysql    database='${human_db_database}', user='${human_db_user}', password='${human_db_password}', host='${human_db_ip}', port=${human_db_port},charset="UTF8"

连接mysql数据库-humanac
    Connect To Database Using Custom Params    pymysql    database='${humanac_db_database}', user='${humanac_db_user}', password='${humanac_db_password}', host='${humanac_db_ip}', port=${humanac_db_port},charset="UTF8"

连接mysql数据库-humanauz
    Connect To Database Using Custom Params    pymysql    database='${humanauz_db_database}', user='${humanauz_db_user}', password='${humanauz_db_password}', host='${humanauz_db_ip}', port=${humanauz_db_port},charset="UTF8"

连接mysql数据库-humanres
    Connect To Database Using Custom Params    pymysql    database='${humanres_db_database}', user='${humanres_db_user}', password='${humanres_db_password}', host='${humanres_db_ip}', port=${humanres_db_port},charset="UTF8"

连接mysql数据库-humantag
    Connect To Database Using Custom Params    pymysql    database='${humantag_db_database}', user='${humantag_db_user}', password='${humantag_db_password}', host='${humantag_db_ip}', port=${humantag_db_port},charset="UTF8"

断开mysql数据库
    Disconnect From Database

删除初始化数据
    连接mysql数据库-human
    Execute Sql Script    ${CURDIR}/delete_base_data_human.sql
