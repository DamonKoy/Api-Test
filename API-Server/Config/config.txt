*** Settings ***
Library           DatabaseLibrary
Library           RequestsLibrary
Library           HttpLibrary.HTTP
Library           String
Library           Collections
Library           OperatingSystem
Library           DateTime
Library           NewLibrary
Resource          ../Hosts/host.txt
Resource          ../Common/constant.txt
Resource          ../Common/sql.txt

*** Variables ***
# 版本变量
${versioncode}    android_4.8.6
# 获取token模块
${install_token_api}    ?m=Api&c=User&a=token     # 测试服获取install_token
${install_api}    ?m=Api&c=App&a=install    # 通过设备获取token
# AdmUserIdentity模块
${get_identity_info_api}    index.php?m=Api&c=AdmUserIdentity&a=get_identity_info    # 新增用户身份
${get_all_identity_admin_name_api}     index.php?m=Api&c=AdmUserIdentity&a=get_all_identity_admin_name     # 获取所有身份认证名称
# 服装店相关
${get_automated_keyword_api}    ?m=Api&c=SpdiySearch&a=get_automated_keyword    # 获取搜索联想词
# NewyearActivity
${get_newyear_activity_list_api}    ?m=Api&c=NewyearActivity&a=get_newyear_activity_list    # 获取寒假福利活动列表
${get_recharge_active_reward_api}    ?m=Api&c=NewyearActivity&a=get_recharge_active_reward    # 获取充值满赠
# ChumanDrama
${muti_edit_role_api}    ?m=Api&c=ChumanDrama&a=muti_edit_role    # 新建（修改）漫剧角色
${muti_copy_role_api}    ?m=Api&c=ChumanDrama&a=muti_copy_role    # 复制漫剧角色(导入角色时使用)
# Comic
${comic_edit_api}    ?m=Api&c=Comic&a=comic_edit    # 创建/编辑漫画单篇
${comic_create_comic_list_api}    ?m=Api&c=Comic&a=comic_create_comic_list    # 4.5.2-获取创作页单篇列表
${comic_del_api}    ?m=Api&c=Comic&a=comic_del    # 删除漫画单篇


*** Keywords ***
# 获取token模块
测试服获取install_token
    [Arguments]    ${user_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}    versioncode=${versioncode}
    ${headers}    Create Dictionary    Content-Type=application/json
    ${response}    GET Request    new_request    ${install_token_api}    params=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    Should Be Equal As Strings    ${response.json()['status']}    ok
    Should Be Equal As Strings    ${response.json()['message']['message']}    操作成功
    ${data}    Create Dictionary    install_token=${response.json()['data']['install_token']}
    Set Suite Variable    ${install_token}    ${response.json()['data']['install_token']}
    [Return]    ${data}

获取install_token
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    device_model=LYA-AL00    device_brand=HUAWEI    device_token=7c169643-0d5b-471d-935e-82fd4cf896de    device_type=0    language=zh-hans    marketing_channel=chuman
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]
    ${response}    Post Request    new_request    ${install_api}    data=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    Should Be Equal As Strings    ${response.json()['status']}    ok
    Should Be Equal As Strings    ${response.json()['message']['message']}    操作成功
    ${data}    Create Dictionary    install_token=${response.json()['data']['install_token']}
    Set Suite Variable    ${install_token}    ${response.json()['data']['install_token']}
    [Return]    ${data}

# AdmUserIdentity模块
新增用户身份
    [Arguments]    ${user_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    GET Request    new_request    ${get_identity_info_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取所有身份认证名称
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${user_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    GET Request    new_request    ${get_all_identity_admin_name_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

# 服装店相关
获取搜索联想词
    [Arguments]    ${keyword}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    keyword=${keyword}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    GET Request    new_request    ${get_automated_keyword_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

# NewyearActivity
获取寒假福利活动列表
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    GET Request    new_request    ${get_newyear_activity_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取充值满赠
    [Arguments]    ${reward_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    reward_id=${reward_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    Post Request    new_request    ${get_recharge_active_reward_api}    data=${loginData}    headers=${headers}
    [Return]    ${response}

# ChumanDrama
新建（修改）漫剧角色
    [Arguments]    ${reward_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    reward_id=${reward_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    Post Request    new_request    ${get_recharge_active_reward_api}    data=${loginData}    headers=${headers}
    [Return]    ${response}

# Comic
创建/编辑漫画单篇
    [Arguments]    ${id}    ${title}    ${data_json}    ${font_face}    ${title_image}    ${version}    ${state}    ${block_count}    ${intro}    ${comic_type}    ${group_id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${id}    title=${title}    data_json=${data_json}    font_face=${font_face}    title_image=${title_image}    version=${version}    state=${state}    block_count=${block_count}    intro=${intro}    comic_type=${comic_type}    group_id=${group_id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    Post Request    new_request    ${comic_edit_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取创作页单篇列表
    [Arguments]    ${pize}    ${pagesize}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    pize=${pize}    pagesize=${pagesize}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    GET Request    new_request    ${comic_create_comic_list_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

删除漫画单篇
    [Arguments]    ${id}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    id=${id}
    ${headers}    Create Dictionary    Content-Type=application/json    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    Post Request    new_request    ${comic_del_api}    params=${loginData}    headers=${headers}
    [Return]    ${response}

获取当前时间戳
    ${date}    get current Date
    ${date}    convert Date    ${date}    epoch
    [Return]    ${date}

手机号码登录
    [Arguments]    ${user}    ${password}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    user=${user}    password=${password}
    ${headers}    Create Dictionary    Content-Type=application/x-www-form-urlencoded    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    Post Request    new_request    ${login_api}    data=${loginData}    headers=${headers}
    [Return]    ${response}

集成-登录获取验证信息
    [Arguments]    ${user}    ${password}
    Create Session    new_request    &{host}[API]    debug=3
    ${loginData}    Create Dictionary    user=${user}    password=${password}
    ${headers}    Create Dictionary    Content-Type=application/x-www-form-urlencoded    MAuthorization=&{MAuthorization1}[通用]:${install_token}
    ${response}    Post Request    new_request    ${login_api}    data=${loginData}    headers=${headers}
    log    ${response.content}
    log    ${response.json()['message']['message']}
    log    ${response.json()['status']}
    log    ${response.json()['data']}
    Set Global Variable    ${token}    ${response.json()['data']['install_token']}
    ${data}    Create Dictionary    user_id=${response.json()['data']['profile']['user_id']}    nickname=${response.json()['data']['profile']['nickname']}
    [Return]    ${data}

校验接口返回状态正常
    [Arguments]    ${response}    # 接口返回数据
    log    ${response.content}
    Should Be Equal As Strings    ${response.status_code}    200
    log    ${response.json()['message']['message']}
    Should Be Equal As Strings    ${response.json()['status']}    ok
    Should Be Equal As Strings    ${response.json()['message']['message']}    操作成功

根据类型查询已存在的身份信息
    [Arguments]    ${type}
    连接mysql数据库-humanac
    ${identity_data}=    query    select identity from hc_identify where type = ${type} LIMIT 1;
    [Return]    ${identity_data[0][0]}

生成随机字符串
    [Arguments]    ${num}
    ${result}    Evaluate    "".join(random.sample(string.letters+string.lowercase,int(${num})))    random,string
    [Return]    ${result}

生成随机8位数字
    ${result}    Evaluate    random.randint(00000001,99999999)    random
    [Return]    ${result}

生成随机11位数字
    ${result}    Evaluate    random.randint(10000000001,12999999999)    random
    [Return]    ${result}

生成随机12位数字
    ${result}    Evaluate    random.randint(100000000001,129999999999)    random
    [Return]    ${result}

连接mysql数据库-human
    Connect To Database Using Custom Params    pymysql    database='${human_db_database}', user='${human_db_user}', password='${human_db_password}', host='${human_db_ip}', port=${human_db_port},charset="UTF8"

连接mysql数据库-humanac
    Connect To Database Using Custom Params    pymysql    database='${humanac_db_database}', user='${humanac_db_user}', password='${humanac_db_password}', host='${humanac_db_ip}', port=${humanac_db_port},charset="UTF8"

连接mysql数据库-humanauz
    Connect To Database Using Custom Params    pymysql    database='${humanauz_db_database}', user='${humanauz_db_user}', password='${humanauz_db_password}', host='${humanauz_db_ip}', port=${humanauz_db_port},charset="UTF8"

连接mysql数据库-humanres
    Connect To Database Using Custom Params    pymysql    database='${humanres_db_database}', user='${humanres_db_user}', password='${humanres_db_password}', host='${humanres_db_ip}', port=${humanres_db_port},charset="UTF8"

连接mysql数据库-humantag
    Connect To Database Using Custom Params    pymysql    database='${humantag_db_database}', user='${humantag_db_user}', password='${humantag_db_password}', host='${humantag_db_ip}', port=${humantag_db_port},charset="UTF8"

断开mysql数据库
    Disconnect From Database

删除初始化数据
    连接mysql数据库-human
    Execute Sql Script    ${CURDIR}/delete_base_data_human.sql
