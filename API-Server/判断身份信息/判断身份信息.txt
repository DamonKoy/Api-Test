*** Settings ***
Default Tags
Resource          ../Config/config.txt

*** variable ***


*** Test Cases ***
校验已存在的用户名
    [Tags]    smoke
    ${case_name}    set variable    smoke
    log    &{identity_type}[用户名]
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[用户名]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[用户名]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    True

校验已存在的身份证
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[身份证]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[身份证]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    True

校验已存在的手机
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[手机]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[手机]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    True

校验已存在的email
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[email]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[email]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    True

校验已存在的手机与不匹配的类型，也校验了不存在的情况
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[用户名]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[手机]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    False

校验已存在的身份证与不匹配的类型，也校验了不存在的情况
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[手机]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[身份证]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    False

校验已存在的邮箱与不匹配的类型，也校验了不存在的情况
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[身份证]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[email]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    False

校验已存在的手机与不匹配的类型，也校验了不存在的情况
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[手机]
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[用户名]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    0
    Should Be Equal As Strings    ${response.json()['error_msg']}    SUCCESS
    Should Be Equal As Strings    ${response.json()['data']['existsFlag']}    False

校验必填项type
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}=    根据类型查询已存在的身份信息    &{identity_type}[手机]
    ${type}    Set Variable
    ${response}=    判断身份信息是否存在_发送post请求    ${type}    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    20001
    Should Be Equal As Strings    ${response.json()['error_msg']}    type:may not be null;

校验必填项identity
    [Tags]    smoke
    ${case_name}    set variable    smoke
    ${identity}    Set Variable
    ${response}=    判断身份信息是否存在_发送post请求    &{identity_type}[用户名]    ${identity}
    log    ${response.content}
    #开始断言接口返回响应
    Should Be Equal As Strings    ${response.status_code}    200
    #开始断言返回结果
    log    ${response.json()['error_msg']}
    Should Be Equal As Strings    ${response.json()['error_code']}    20001
    Should Be Equal As Strings    ${response.json()['error_msg']}    identity:may not be empty;
